name: CI

on:
  push:
    branches:
      - master

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install Poetry
        uses: dschep/install-poetry-action@v1.2
    
      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Set Poetry config
        run: |
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.path ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Code Quality
        run: poetry run black . --check

      - name: Linting
        run: poetry run flake8 .

      - name: Initialize Airflow MetadataDB
        run: poetry run airflow initdb

      - name: Test with pytest
        run: poetry run pytest .

      - name: Zip DAGs
        run: |
          cd dags
          rm *.pyc
          rm -rf __pycache__
          zip -r ../dags_1.0.0.zip *
          cd ..

      - name: Push DAGs to docker-airflow
        run: |
          git config --global user.name "smezzacapo"
          git clone https://.:${{ secrets.TOKEN }}@github.com/smezzacapo/docker-airflow zip_target
          cd zip_target
          git checkout master
          git status
          rm dags/dags_1.0.0.zip
          cp ../dags_1.0.0.zip dags/dags_1.0.0.zip
          git status
          git add .
          git status
          git commit -m "Automatic DAG push"
          git status
          git push
